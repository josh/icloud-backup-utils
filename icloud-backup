#!/bin/bash
# usage: icloud-backup [--compare] ~/Backup

set -euo pipefail

noitfy_error() {
	if command -v terminal-notifier; then
		terminal-notifier -title "icloud-backup" -subtitle "$(date)" -message "Backup failed"
	fi
}
trap noitfy_error ERR

main() {
	case "$1" in
	--help | -h)
		sed -ne '/^#/!q;s/.\{1,2\}//;1d;p' <"$0"
		exit 0
		;;
	--compare)
		compare "$2"
		exit 0
		;;
	'')
		"$0" --help | head -1 >&2
		exit 1
		;;
	*)
		backup "$1/$(date +'%Y-%m-%d') iCloud Backup.tar"
		exit 0
		;;
	esac
}

backup() {
	tar -rf "$1" -C "$HOME" "Desktop"
	tar -rf "$1" -C "$HOME" "Documents"
	tar -rf "$1" -C "$HOME/Library" "Mobile Documents"
	tar -rf "$1" -C "$HOME/Library" "Keychains"

	export_notes "/tmp/Notes"
	tar -rf "$1" -C "/tmp" "Notes"

	export_reminders "/tmp/Reminders"
	tar -rf "$1" -C "/tmp" "Reminders"

	gzip -f "$1"
}

export_notes() {
	rm -rf "$1"
	mkdir "$1"
	while IFS= read -r -d '' status && IFS= read -r -d '' name && IFS= read -r -d '' body; do
		# shellcheck disable=SC2001
		safe_name="$(echo "$name" | sed -e 's/[^A-Za-z0-9 ._-]//g')"
		echo "$body" >"$1/$safe_name.html"
	done < <(print_notes)
	[ "$status" = $'\nOK\n' ]
}

print_notes() {
	osascript 2>&1 <<'AS'
  tell application "Notes"
    set myDelim to character id 0
    repeat with theNote in notes
      log myDelim & (get name of theNote) & myDelim & (get body of theNote) & myDelim
    end repeat
    log "OK"
  end tell
AS
}

export_reminders() {
	rm -rf "$1"
	mkdir "$1"

	print_reminders_accounts >"$1/accounts.tsv"
	print_reminders_lists >"$1/lists.tsv"
	print_reminders_reminders >"$1/reminders.tsv"
}

print_reminders_accounts() {
	osascript 2>&1 <<'AS'
set rowSep to "\n"
set colSep to "\t"

tell application "Reminders"
	log "id" & colSep & ¬
		"name"
	repeat with theAccount in every account
		log (get id of theAccount) & colSep & ¬
			(get name of theAccount)
	end repeat
end tell
AS
}

print_reminders_lists() {
	osascript 2>&1 <<'AS'
set rowSep to "\n"
set colSep to "\t"

tell application "Reminders"
	log "id" & colSep & ¬
		"name" & colSep & ¬
		"container" & colSep & ¬
		"color" & colSep & ¬
		"emblem"
	repeat with theList in every list
		log (get id of theList) & colSep & ¬
			(get name of theList) & colSep & ¬
			(get id of container of theList) & colSep & ¬
			(get color of theList) & colSep & ¬
			(get emblem of theList)
	end repeat
end tell
AS
}

print_reminders_reminders() {
	osascript 2>&1 <<'AS'
set rowSep to "\n"
set colSep to "\t"

tell application "Reminders"
	log "id" & colSep & ¬
		"name" & colSep & ¬
		"container" & colSep & ¬
		"creation date" & colSep & ¬
		"modification date" & colSep & ¬
		"body" & colSep & ¬
		"completed" & colSep & ¬
		"completion date" & colSep & ¬
		"due date" & colSep & ¬
		"allday due date" & colSep & ¬
		"remind me date" & colSep & ¬
		"priority" & colSep & ¬
		"flagged"
	repeat with theReminder in every reminder
		log (get id of theReminder) & colSep & ¬
			(get name of theReminder) & colSep & ¬
			(get id of container of theReminder) & colSep & ¬
			(get creation date of theReminder) & colSep & ¬
			(get modification date of theReminder) & colSep & ¬
			(get body of theReminder) & colSep & ¬
			(get completed of theReminder) & colSep & ¬
			(get completion date of theReminder) & colSep & ¬
			(get due date of theReminder) & colSep & ¬
			(get allday due date of theReminder) & colSep & ¬
			(get remind me date of theReminder) & colSep & ¬
			(get priority of theReminder) & colSep & ¬
			(get flagged of theReminder)
	end repeat
end tell
AS
}

compare() {
	rm -rf /tmp/icloud-backup
	mkdir -p /tmp/icloud-backup
	pushd /tmp/icloud-backup >/dev/null

	tar --no-same-permissions -xzf "$1"

	comm -3 <(md5sum "Desktop/" | sort) <(md5sum "$HOME/Desktop" | sort)
	comm -3 <(md5sum "Documents/" | sort) <(md5sum "$HOME/Documents" | sort)
	comm -3 <(md5sum "Mobile Documents/" | sort) <(md5sum "$HOME/Library/Mobile Documents" | sort)
}

md5sum() {
	pushd "$1" >/dev/null
	find . -type f -print0 | while IFS= read -rd '' path; do
		md5 -r "$path"
	done
	popd >/dev/null
}

main "$@"
